{"version":3,"sources":["Chart/utils.js","Chart/Chart.jsx","Chart/Rect.jsx","Chart/Group.jsx","Chart/Bars.jsx","Chart/Axis.jsx","Chart/Legends.jsx","Histogram.jsx","DatePicker.jsx","Chart/CustomSelect.jsx","App.jsx","index.js"],"names":["dateFilter","startDate","endDate","data","momentFormat","d","moment","dateFilteredData","filter","area","key","diff","sortBy","sortingKey","sorter","areaFilter","selectedArea","Areas","map","item","value","values","includes","areaName","formatDate","date","d3","format","groupDataByKey","entries","getWidth","PropTypes","oneOfType","func","number","shape","height","width","marginTop","marginRight","marginBottom","marginLeft","window","innerWidth","document","documentElement","clientWidth","body","getHeight","innerHeight","clientHeight","Chart","dimensions","children","className","viewBox","transform","defaultProps","Rect","keyAccessor","xAccessor","yAccessor","widthAccessor","heightAccessor","index","fill","useState","isHover","setHover","x","y","onMouseOver","e","stopPropagation","onMouseLeave","Date","specimenDate","dailyLabConfirmedCases","Group","xAccessorGroup","i","props","Bars","Fragment","axisComponentsByDimension","label","scale","formatTick","barBandWidth","numberOfTicks","boundedWidth","ticks","boundedHeight","x2","tick","y2","style","Axis","dimension","Component","Legends","fillColors","React","memo","selectedValues","customWidth","customMarginWidth","Math","max","nullRemovedData","length","selectedAreas","dateRange","allDates","flat","valuesRange","xScale","domain","range","yScale","xBand","padding","xBand1","bandwidth","color","previous","next","DatePicker","handleDatesChange","orientation","focusedInput","setFocusedInput","minDate","maxDate","renderCalendarInfo","block","daySize","startDateId","endDateId","isOutsideRange","onDatesChange","displayFormat","onFocusChange","showDefaultInputIcon","inputIconPosition","CustomSelect","options","styles","onChangeHandler","defaultValue","isMulti","name","aria-label","onChange","classNamePrefix","App","defaultStartDate","defaultEndDate","setData","areaFilteredData","setAreaFilteredData","dateWiseData","setDateWiseData","setStartDate","setEndDate","setselectedArea","areas","setAreas","parseDate","setWidth","setHeight","useEffect","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useCurrentResolution","customHeight","customMarginHeight","a","axios","get","getData","ltlas","areaData","groupDataByDate","areaNames","Map","sortedAreas","areaWiseFilteredData","applyDateFilter","covidData","selectStyles","control","display","background","borderRadius","border","menu","maxHeight","menuList","selectValue","alert","momentStart","momentEnd","ReactDOM","render","getElementById"],"mappings":"6ZAOaA,EAAa,SAACC,EAAWC,EAASC,GAC7C,IAAMC,EAAe,SAACC,GAAD,OAAOC,IAAOD,IAC7BE,EACJN,GACAC,GACAC,EAAKK,QAAO,SAACC,GACX,GACEL,EAAaK,EAAKC,KAAKC,KAAKV,GAAa,GACzCG,EAAaK,EAAKC,KAAKC,KAAKT,GAAW,EAEvC,OAAOO,KAGb,OAAIF,GACGJ,GAGIS,EAAS,SAACC,EAAYV,GAAb,OAAsBW,IAAOX,GAAM,SAACE,GAAD,OAAOA,EAAEQ,OAwBrDE,EAAa,SAACC,EAAcb,GACvC,IAAMc,EAAQD,EAAaE,KAAI,SAACC,GAAD,OAAUA,EAAKC,SAW9C,OAVkBjB,EAAKe,KAAI,SAACT,GAC1B,MAAO,CACLC,IAAKD,EAAKC,IACVW,OAAQZ,EAAKY,OAAOb,QAAO,SAACH,GAC1B,GAAIY,EAAMK,SAASjB,EAAEkB,UACnB,OAAOlB,UAQJmB,EAAa,SAACC,GAEzB,OADeC,IAAc,WACtBC,CAAOF,IASHG,EAAiB,SAAClB,EAAKP,GAKlC,OAJoBuB,MAEjBhB,KAAI,SAACL,GAAD,OAAOA,EAAEK,MACbmB,QAAQ1B,IAkBP2B,GAd2BC,IAAUC,UAAU,CACnDD,IAAUE,KACVF,IAAUG,SAGuBH,IAAUI,MAAM,CACjDC,OAAQL,IAAUG,OAClBG,MAAON,IAAUG,OACjBI,UAAWP,IAAUG,OACrBK,YAAaR,IAAUG,OACvBM,aAAcT,IAAUG,OACxBO,WAAYV,IAAUG,SAGP,kBACfQ,OAAOC,YACPC,SAASC,gBAAgBC,aACzBF,SAASG,KAAKD,cAEVE,EAAY,kBAChBN,OAAOO,aACPL,SAASC,gBAAgBK,cACzBN,SAASG,KAAKG,c,WCnGVC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAf,OACZ,yBACEC,UAAU,QACVjB,MAAOe,EAAWf,MAClBD,OAAQgB,EAAWhB,OACnBmB,QAAO,cAASH,EAAWf,MAApB,YAA6Be,EAAWhB,SAE/C,uBACEoB,UAAS,oBAAeJ,EAAWX,WAA1B,aAAyCW,EAAWd,UAApD,MAERe,KASPF,EAAMM,aAAe,CACnBL,WAAY,IAGCD,Q,QCWAO,MAnCf,YASI,IFuDoBvD,EE/DtBwD,EAQC,EARDA,YACAC,EAOC,EAPDA,UACAC,EAMC,EANDA,UACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,eACA1D,EAGC,EAHDA,EACA2D,EAEC,EAFDA,MACAC,EACC,EADDA,KACC,EAC2BC,oBAAS,GADpC,mBACMC,EADN,KACeC,EADf,KAED,OACE,2BACE,0BACEd,UAAS,UAAKa,EAAU,mBAAqB,cAC7CzD,IAAKiD,EAAYK,GACjBK,EAAGT,EAAUvD,GACbiE,EAAGT,EAAUxD,GACbgC,MAAOyB,EAAczD,GACrB+B,OAAQ2B,EAAe1D,GACvB4D,KAAMA,EAAK5D,GACXkE,YAAa,SAACC,GACZA,EAAEC,kBACFL,GAAS,IAEXM,aAAc,SAACF,GACbA,EAAEC,kBACFL,GAAS,MAGb,gCFkCkBjE,EElCFE,EFmCd,GAAN,OAAUmB,EAAW,IAAImD,KAAKxE,EAAKyE,eAAnC,cACEzE,EAAK0E,4BGrDMC,MAdf,YAAoD,IAAnCC,EAAkC,EAAlCA,eAAgB1E,EAAkB,EAAlBA,EAAG2E,EAAe,EAAfA,EAAMC,EAAS,0CACjD,OACE,uBACE3B,UAAU,aACV5C,IAAKsE,EACLxB,UAAS,oBAAeuB,EAAe1E,GAA9B,QAERA,EAAEgB,OAAOH,KAAI,SAACb,EAAG2D,GAAJ,OACZ,kBAAC,EAAD,eAAM3D,EAAGA,EAAGK,IAAKsD,EAAOA,MAAOA,GAAWiB,SCN5CC,EAAO,SAACD,GACZ,OACE,kBAAC,IAAME,SAAP,KACGF,EAAM9E,KAAKe,KAAI,SAACb,EAAG2E,GAClB,OAAO,kBAAC,EAAD,iBAAWC,EAAX,CAAkB5E,EAAGA,EAAG2E,EAAGA,EAAGtE,IAAKsE,UAelDE,EAAKzB,aAAe,GAELyB,QCrBTE,EAA4B,CAChCf,EAyBF,YAOI,IANFjB,EAMC,EANDA,WACAiC,EAKC,EALDA,MAEAC,GAGC,EAJDC,WAIC,EAHDD,OACAE,EAEC,EAFDA,aACGP,EACF,0EACKQ,EACJrC,EAAWsC,aAAe,IACtBtC,EAAWsC,aAAe,IAC1BtC,EAAWsC,aAAe,IAE1BC,EAAQL,EAAMK,MAAMF,GAE1B,OACE,qCACEnC,UAAU,sBACVE,UAAS,uBAAkBJ,EAAWwC,cAA7B,MACLX,GAEJ,0BACE3B,UAAU,aACVuC,GAAIzC,EAAWsC,aAAeF,IAG/BG,EAAMzE,KAAI,SAAC4E,EAAMd,GAAP,OACT,0BACEtE,IAAKoF,EACLxC,UAAU,aACVE,UAAS,oBAAe8B,EAAMQ,GAArB,sBAERtE,EAAWsE,OAIfT,GACC,0BACE/B,UAAU,cACVE,UAAS,oBAAeJ,EAAWsC,aAAe,EAAzC,UAERL,KAjETf,EAwEF,YAA2E,IAAnDlB,EAAkD,EAAlDA,WAAYiC,EAAsC,EAAtCA,MAAOE,EAA+B,EAA/BA,WAAYD,EAAmB,EAAnBA,MAAUL,EAAS,2DAGlEU,GAFgBvC,EAAWwC,cAEnBN,EAAMK,SAEpB,OACE,qCAAGrC,UAAU,qBAAwB2B,GACnC,0BAAM3B,UAAU,aAAayC,GAAI3C,EAAWwC,gBAE3CD,EAAMzE,KAAI,SAAC4E,EAAMd,GAAP,OACT,0BACEtE,IAAKoF,EACLxC,UAAU,aACVE,UAAS,yBAAoB8B,EAAMQ,GAA1B,MAERP,EAAWO,OAIfT,GACC,0BACE/B,UAAU,cACV0C,MAAO,CACLxC,UAAU,oBAAD,OACPJ,EAAWwC,cAAgB,EADpB,wBAKVP,MAlGLY,EAAO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAW9C,EAA2B,EAA3BA,WAAe6B,EAAY,0CAC9CkB,EAAYf,EAA0Bc,GAC5C,OAAKC,EAEE,kBAACA,EAAD,eAAW/C,WAAYA,GAAgB6B,IAFvB,MAYzBgB,EAAKxC,aAAe,CAClByC,UAAW,IACXZ,MAAO,KACPC,WAAY7D,IAAU,MAGTuE,QCRAG,MAnBf,YAA+C,IAA5BjG,EAA2B,EAA3BA,KAAMiD,EAAqB,EAArBA,WAAYkC,EAAS,EAATA,MACnC,OAAOnF,EAAKe,KAAI,SAACb,EAAG2E,GAClB,OACE,uBACEtE,IAAKsE,EACLf,KAAI,UAAKqB,EAAMjF,EAAEe,QACjBoC,UAAS,oBAAeJ,EAAWsC,aAAe,IAAzC,YACH,GAAJV,EAAS,GADF,OAIT,0BAAM3C,MAAM,KAAKD,OAAO,OACxB,0BAAMiC,EAAE,KAAKC,EAAE,KAAKL,KAAI,UAAKqB,EAAMjF,EAAEe,SAClCf,EAAEe,YCNPiF,EAAa,CAAC,YAAa,aA8GlBC,MAAMC,MA7GH,SAAC,GAMZ,IALLpG,EAKI,EALJA,KACAkF,EAII,EAJJA,MACAmB,EAGI,EAHJA,eACAC,EAEI,EAFJA,YAKMnE,GAHF,EADJoE,kBAIkBD,EAAc,IAAO,IAAM,GAEvChE,EAAagE,EAAc,IAAO,IAAM,GACxClE,EAAckE,EAAc,IAAO,IAAM,GAE3CrD,EAAa,CACfhB,OARa,IASbC,MARY,IASZC,YACAE,aARmB,IASnBC,aACAF,cACAqD,cAAee,KAAKC,IAdP,IAcoBtE,EAXd,IAWwC,GAC3DoD,aAAciB,KAAKC,IAdP,IAcmBnE,EAAaF,EAAa,IAGrDsE,EAAkB1G,EAAKK,QAAO,SAACC,GACnC,GAAIA,EAAKY,OAAOyF,OAAS,EACvB,OAAOrG,EAAKC,OAGVqG,EAAgBP,EAAetF,KAAI,SAACb,GAAD,OAAOA,EAAEe,SAC5C4F,EAAYtF,IAChBmF,EAAgB3F,KAAI,SAACT,GAAD,OAAU,IAAIkE,KAAKlE,EAAKC,SAExCuG,EAAW9G,EAAKe,KAAI,SAACT,GAAD,OAAU,IAAIkE,KAAKlE,EAAKC,QAC5CW,EAASlB,EAAKe,KAAI,SAACb,GAAD,OAAOA,EAAEgB,UAAQ6F,OACnCC,EAAc,CAAC,EAAGzF,IAAOL,EAAOH,KAAI,SAACb,GAAD,OAAOA,EAAEwE,4BAE7CuC,EAAS1F,MAEZ2F,OAAOL,GACPM,MAAM,CAAC,EAAGlE,EAAWsC,eAElB6B,EAAS7F,MAEZ2F,OAAOF,GACPG,MAAM,CAAClE,EAAWwC,cAAe,KAE9B4B,EAAQ9F,MAEX2F,OAAOJ,GACPK,MAAM,CAAC,EAAGlE,EAAWsC,eACrB+B,QAAQ,IAELC,EAAShG,MAEZ2F,OAAON,GACPO,MAAM,CAAC,EAAGE,EAAMG,cAEbnC,EAAegC,EAAMG,YAAc,IAAM,EAAIH,EAAMG,YAEnDC,EAAQlG,MAAkB2F,OAAON,GAAeO,MAAMjB,GAY5D,OACE,yBAAK/C,UAAU,aACb,kBAAC,EAAD,CAAOF,WAAYA,GACjB,kBAAC,EAAD,CACEjD,KAAMqG,EACNpD,WAAYA,EACZkC,MARW,SAACjF,GAAD,OAAOuH,EAAMvH,MAU1B,kBAAC,EAAD,CACE+C,WAAYA,EACZ8C,UAAU,IACVZ,MAAO8B,EACP/B,MAAOA,EACPG,aAAcA,IAEhB,kBAAC,EAAD,CACEpC,WAAYA,EACZ8C,UAAU,IACVZ,MAAOiC,EACPlC,MAAM,UAER,kBAAC,EAAD,CACElF,KAAMA,EACNwD,YA3BY,SAACtD,EAAG2E,GAAJ,OAAUA,GA4BtBD,eAjCqB,SAAC1E,GAAD,OAAO+G,EAAO,IAAIzC,KAAKtE,EAAEK,OAkC9CkD,UAnCgB,SAACvD,GAAD,OAAOqH,EAAOrH,EAAEkB,WAoChCsC,UAlCgB,SAACxD,GAAD,OAAOkH,EAAOlH,EAAEwE,yBAmChCf,cAlCoB,kBAAM4D,EAAOC,aAmCjC5D,eAlCqB,SAAC1D,GAAD,OAC3B+C,EAAWwC,cAAgB2B,EAAOlH,EAAEwE,yBAkC9BZ,KAhCoB,SAAC5D,GAAD,OAAOuH,EAAMvH,EAAEkB,kBAuCR,SAACsG,EAAUC,GAC9C,OAA4B,OAAxBA,EAAKtB,gBAEEqB,IAAaC,QAAjB,K,yBC9EMC,MArCf,YAA6E,IAAvD9H,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,QAAS8H,EAAkC,EAAlCA,kBAAmBC,EAAe,EAAfA,YAAe,EAClC/D,mBAAS,MADyB,mBACnEgE,EADmE,KACrDC,EADqD,KAGpE/H,EAAe,SAACC,GAAD,OAAOC,IAAOD,IAE7B+H,EAAUhI,EAAa,cACvBiI,EAAUjI,EAAa,cAM7B,OACE,yBAAKkD,UAAU,OACb,kBAAC,kBAAD,CACEgF,mBAPqB,kBACzB,4EAOIC,OAAO,EACPC,QAAS,GACTJ,QAASA,EACTC,QAASA,EACTpI,UAAWA,EACXwI,YAAY,aACZvI,QAASA,EACTwI,UAAU,WACVC,eAAgB,kBAAM,GACtBC,cAAeZ,EACfE,aAAcA,EACdW,cAAe,iBAAM,cACrBC,cAAe,SAACZ,GAAD,OAAkBC,EAAgBD,IACjDa,sBAAoB,EACpBC,kBAAkB,QAClBf,YAAaA,M,kBCTNgB,MAzBf,YAOI,IANFC,EAMC,EANDA,QACA7G,EAKC,EALDA,MACA8G,EAIC,EAJDA,OACAC,EAGC,EAHDA,gBACAhI,EAEC,EAFDA,MACAiI,EACC,EADDA,aAEA,OACE,kBAAC,IAAD,CACEC,SAAO,EACPC,KAAK,SACLnI,MAAOA,EACPoI,aAAW,yBACXN,QAASA,EACTG,aAAcA,EACdI,SAAUL,EACV/G,MAAOA,EACP8G,OAAQA,EACR7F,UAAU,qBACVoG,gBAAgB,YC6IPC,MAnJf,WACE,IAAMC,EAAmBtJ,IAAO,cAC1BuJ,EAAiBvJ,IAAO,cAFjB,EAGW4D,mBAAS,IAHpB,mBAGN/D,EAHM,KAGA2J,EAHA,OAImC5F,mBAAS,IAJ5C,mBAIN6F,EAJM,KAIYC,EAJZ,OAK2B9F,mBAAS,IALpC,mBAKN+F,EALM,KAKQC,EALR,OAMqBhG,mBAAS0F,GAN9B,mBAMN3J,EANM,KAMKkK,EANL,OAOiBjG,mBAAS2F,GAP1B,mBAON3J,EAPM,KAOGkK,EAPH,OAQ2BlG,mBAAS,CAC/C,CAAE9C,MAAO,gBAAiBiE,MAAO,mBATtB,mBAQNrE,EARM,KAQQqJ,EARR,OAWanG,mBAAS,IAXtB,mBAWNoG,EAXM,KAWCC,EAXD,KAaPC,EAAY9I,IAAc,YAbnB,EVyFR,WAAiC,IAAD,EACbwC,mBAASpC,KADI,mBAChCO,EADgC,KACzBoI,EADyB,OAEXvG,mBAASlB,KAFE,mBAEhCZ,EAFgC,KAExBsI,EAFwB,KAoBrC,OAhBAC,qBAAU,WACR,IAAIC,EAAY,KACVC,EAAiB,WACrBC,aAAaF,GACbA,EAAYG,YAAW,WACrBN,EAAS3I,KACT4I,EAAU1H,OACT,MAIL,OAFAN,OAAOsI,iBAAiB,SAAUH,GAE3B,WACLnI,OAAOuI,oBAAoB,SAAUJ,MAEtC,IAEI,CAACzI,EAAQC,GU5FoB6I,GAjBvB,mBAiBNC,EAjBM,KAiBQ1E,EAjBR,KAmBPC,GAAoBD,EAAe,GAAYA,EAE/C2E,GAAsB,IAAYD,EAExCR,qBAAU,YACO,uCAAG,wCAAAU,EAAA,sEACMC,IAAMC,IAAI,2BADhB,cACVC,EADU,gBAEOA,EAAQrL,KAAKsL,MAFpB,OAEVC,EAFU,OAGVC,EAAkB/J,EAAe,eAAgB8J,GACjDE,EAJU,YAKX,IAAIC,IACLH,EAASxK,KAAI,SAACqI,GAAD,MAAU,CACrBA,EAAKhI,SACL,CAAEH,MAAOmI,EAAKhI,SAAU8D,MAAOkE,EAAKhI,eAEtCF,UAEEyK,EAAclL,EAAO,QAASgL,GACpCrB,EAASuB,GACThC,EAAQ6B,GACFI,EAAuBhL,EAAWC,EAAc2K,GACtD3B,EAAoB+B,GACdC,EAAkBhM,EACtBC,EACAC,EACA6L,GAEF7B,EAAgB8B,GAtBA,4CAAH,qDAwBfC,KACC,IAEH,IAAMC,GAAe,CACnBC,QAAS,SAAClH,GAAD,mBAAC,eACLA,GADI,IAEPmH,QAAS,OACTC,WAAY,QACZjK,OAAQ,OACRkK,aAAc,MACdC,OAAQ,uBAEVC,KAAM,iBAAO,CACXC,UAAW,OACXJ,WAAY,UAEdK,SAAU,SAACzH,GAAD,mBAAC,eACNA,GADK,IAERoH,WAAY,QACZjK,OAAQ,WAkCZ,OACE,yBAAKkB,UAAU,OACb,wBAAIA,UAAU,SAAd,yBACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACE4F,QAASoB,EACTnB,OAAQ+C,GACR7C,aAAc,CAAEjI,MAAO,gBAAiBiE,MAAO,iBAC/C+D,gBA7BW,SAACuD,GACpB,GAAKA,GAAsC,IAAvBA,EAAY7F,OAAhC,CAIA,GAAI6F,EAAY7F,OAAS,EAEvB,OADA8F,MAAM,2BACC,KAET,IAAMb,EAAuBhL,EAAW4L,EAAaxM,GAC/C6L,EAAkBhM,EACtBC,EACAC,EACA6L,GAEF/B,EAAoB+B,GACpB7B,EAAgB8B,GAChB3B,EAAgBsC,QAfdtC,EAAgBsC,IA4BVvL,MAAOJ,KAGX,yBAAKsC,UAAU,gBACb,kBAAC,EAAD,CACErD,UAAWA,EACXC,QAASA,EACTiK,aAAcA,EACdC,WAAYA,EACZpC,kBAjDgB,SAAC,GAA4B,IAA1B/H,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAChC2M,EAAcvM,IAAOL,GACrB6M,EAAYxM,IAAOJ,GACzB,GAAI4M,EAAUnM,KAAKkM,EAAa,QAAU,GAAI,OAAO,KACrD,GAAIC,EAAUnM,KAAKkM,EAAa,QAAU,EAAG,OAAO,KACpD1C,EAAalK,GACbmK,EAAWlK,GACX,IAAMK,EAAmBP,EAAWC,EAAWC,EAAS6J,GACxDxJ,GAAoB2J,EAAgB3J,IA0C5B0H,YAAaxB,EAAc,IAAM,aAAe,eAKtD,kBAAC,EAAD,CACE7C,UAjHe,SAACvD,GAAD,OAAOmK,EAAUnK,EAAEuE,eAkHlCf,UAjHgB,SAACxD,GAAD,OAAOA,EAAEwE,wBAkHzB1E,KAAM8J,EACNzD,eAAgBxF,EAChBqE,MAAM,cACNoB,YAAaA,EACb0E,aAAcA,EACdC,mBAAoBA,GACpB1E,kBAAmBA,KAErB,0EACA,gIAE6B,6BAF7B,mDCtJNqG,IAASC,OAAO,kBAAC,EAAD,MAASpK,SAASqK,eAAe,W","file":"static/js/main.cc509cfe.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport sorter from \"lodash.sortby\";\n\nexport const dateFilter = (startDate, endDate, data) => {\n  const momentFormat = (d) => moment(d);\n  const dateFilteredData =\n    startDate &&\n    endDate &&\n    data.filter((area) => {\n      if (\n        momentFormat(area.key).diff(startDate) > 0 &&\n        momentFormat(area.key).diff(endDate) < 0\n      ) {\n        return area;\n      }\n    });\n  if (dateFilteredData) return dateFilteredData;\n  return data;\n};\n\nexport const sortBy = (sortingKey, data) => sorter(data, (d) => d[sortingKey]);\n\nexport const formatAPIEndPoint = () => {\n  const AreaType = \"ltla\";\n  const AreaName = \"*\";\n\n  const filters = [`areaType=${AreaType}`];\n  const structure = {\n    date: \"date\",\n    name: \"areaName\",\n    code: \"areaCode\",\n    cases: {\n      daily: \"newCasesBySpecimenDate\",\n      cumulative: \"newCasesBySpecimenDate\",\n    },\n  };\n  const apiParams = `filters=${filters.join(\";\")}&structure=${JSON.stringify(\n    structure\n  )}`;\n  const encodedParams = encodeURI(apiParams);\n  const endpoint = `https://api.coronavirus.data.gov.uk/v1/data?${encodedParams}`;\n  return endpoint;\n};\n\nexport const areaFilter = (selectedArea, data) => {\n  const Areas = selectedArea.map((item) => item.value);\n  const optedArea = data.map((area) => {\n    return {\n      key: area.key,\n      values: area.values.filter((d) => {\n        if (Areas.includes(d.areaName)) {\n          return d;\n        }\n      }),\n    };\n  });\n  return optedArea;\n};\n\nexport const formatDate = (date) => {\n  const format = d3.timeFormat(\"%d/%m/%y\");\n  return format(date);\n};\n\nexport const toolTip = (data) => {\n  return `${formatDate(new Date(data.specimenDate))} \\n${\n    data.dailyLabConfirmedCases\n  }`;\n};\n\nexport const groupDataByKey = (key, data) => {\n  const groupedData = d3\n    .nest()\n    .key((d) => d[key])\n    .entries(data);\n  return groupedData;\n};\n\nexport const accessorPropsType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.number,\n]);\n\nexport const dimensionsPropsType = PropTypes.shape({\n  height: PropTypes.number,\n  width: PropTypes.number,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n});\n\nconst getWidth = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth;\n\nconst getHeight = () =>\n  window.innerHeight ||\n  document.documentElement.clientHeight ||\n  document.body.clientHeight;\n\nexport function useCurrentResolution() {\n  let [width, setWidth] = useState(getWidth());\n  let [height, setHeight] = useState(getHeight());\n\n  useEffect(() => {\n    let timeoutId = null;\n    const resizeListener = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        setWidth(getWidth());\n        setHeight(getHeight());\n      }, 150);\n    };\n    window.addEventListener(\"resize\", resizeListener);\n\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n\n  return [height, width];\n}\n","import React from \"react\";\nimport { dimensionsPropsType } from \"./utils\";\n\nimport \"./Chart.css\";\n\nconst Chart = ({ dimensions, children }) => (\n  <svg\n    className=\"Chart\"\n    width={dimensions.width}\n    height={dimensions.height}\n    viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n  >\n    <g\n      transform={`translate(${dimensions.marginLeft}, ${dimensions.marginTop})`}\n    >\n      {children}\n    </g>\n  </svg>\n);\n\nChart.propTypes = {\n  dimensions: dimensionsPropsType,\n};\n\nChart.defaultProps = {\n  dimensions: {},\n};\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport { toolTip } from \"./utils\";\nimport * as d3 from \"d3\";\n\nfunction Rect({\n  keyAccessor,\n  xAccessor,\n  yAccessor,\n  widthAccessor,\n  heightAccessor,\n  d,\n  index,\n  fill,\n}) {\n  const [isHover, setHover] = useState(false);\n  return (\n    <g>\n      <rect\n        className={`${isHover ? \"Bars__rect-hover\" : \"Bars__rect\"}`}\n        key={keyAccessor(index)}\n        x={xAccessor(d)}\n        y={yAccessor(d)}\n        width={widthAccessor(d)}\n        height={heightAccessor(d)}\n        fill={fill(d)}\n        onMouseOver={(e) => {\n          e.stopPropagation();\n          setHover(true);\n        }}\n        onMouseLeave={(e) => {\n          e.stopPropagation();\n          setHover(false);\n        }}\n      />\n      <title>{toolTip(d)}</title>\n    </g>\n  );\n}\n\nexport default Rect;\n","import React from \"react\";\nimport Rect from \"./Rect\";\n\nfunction Group({ xAccessorGroup, d, i, ...props }) {\n  return (\n    <g\n      className=\"Svg__Group\"\n      key={i}\n      transform={`translate(${xAccessorGroup(d)},0)`}\n    >\n      {d.values.map((d, index) => (\n        <Rect d={d} key={index} index={index} {...props} />\n      ))}\n    </g>\n  );\n}\n\nexport default Group;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { accessorPropsType } from \"./utils\";\nimport Group from \"./Group\";\n\nconst Bars = (props) => {\n  return (\n    <React.Fragment>\n      {props.data.map((d, i) => {\n        return <Group {...props} d={d} i={i} key={i} />;\n      })}\n    </React.Fragment>\n  );\n};\n\nBars.propTypes = {\n  data: PropTypes.array,\n  keyAccessor: accessorPropsType,\n  xAccessor: accessorPropsType,\n  yAccessor: accessorPropsType,\n  widthAccessor: accessorPropsType,\n  heightAccessor: accessorPropsType,\n};\n\nBars.defaultProps = {};\n\nexport default Bars;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport { formatDate } from \"./utils\";\n\nconst axisComponentsByDimension = {\n  x: AxisHorizontal,\n  y: AxisVertical,\n};\nconst Axis = ({ dimension, dimensions, ...props }) => {\n  const Component = axisComponentsByDimension[dimension];\n  if (!Component) return null;\n\n  return <Component dimensions={dimensions} {...props} />;\n};\n\nAxis.propTypes = {\n  dimension: PropTypes.oneOf([\"x\", \"y\"]),\n  scale: PropTypes.func,\n  label: PropTypes.string,\n  formatTick: PropTypes.func,\n};\n\nAxis.defaultProps = {\n  dimension: \"x\",\n  scale: null,\n  formatTick: d3.format(\",\"),\n};\n\nexport default Axis;\n\nfunction AxisHorizontal({\n  dimensions,\n  label,\n  formatTick,\n  scale,\n  barBandWidth,\n  ...props\n}) {\n  const numberOfTicks =\n    dimensions.boundedWidth < 600\n      ? dimensions.boundedWidth / 100\n      : dimensions.boundedWidth / 250;\n\n  const ticks = scale.ticks(numberOfTicks);\n\n  return (\n    <g\n      className=\"Axis AxisHorizontal\"\n      transform={`translate(0, ${dimensions.boundedHeight})`}\n      {...props}\n    >\n      <line\n        className=\"Axis__line\"\n        x2={dimensions.boundedWidth + barBandWidth}\n      />\n\n      {ticks.map((tick, i) => (\n        <text\n          key={tick}\n          className=\"Axis__tick\"\n          transform={`translate(${scale(tick)}, 35) rotate(-70)`}\n        >\n          {formatDate(tick)}\n        </text>\n      ))}\n\n      {label && (\n        <text\n          className=\"Axis__label\"\n          transform={`translate(${dimensions.boundedWidth / 2}, 90)`}\n        >\n          {label}\n        </text>\n      )}\n    </g>\n  );\n}\n\nfunction AxisVertical({ dimensions, label, formatTick, scale, ...props }) {\n  const numberOfTicks = dimensions.boundedHeight / 70;\n\n  const ticks = scale.ticks();\n\n  return (\n    <g className=\"Axis AxisVertical\" {...props}>\n      <line className=\"Axis__line\" y2={dimensions.boundedHeight} />\n\n      {ticks.map((tick, i) => (\n        <text\n          key={tick}\n          className=\"Axis__tick\"\n          transform={`translate(-16, ${scale(tick)})`}\n        >\n          {formatTick(tick)}\n        </text>\n      ))}\n\n      {label && (\n        <text\n          className=\"Axis__label\"\n          style={{\n            transform: `translate(-56px, ${\n              dimensions.boundedHeight / 2\n            }px) rotate(-90deg)`,\n          }}\n        >\n          {label}\n        </text>\n      )}\n    </g>\n  );\n}\n","import React from \"react\";\n\nfunction Legends({ data, dimensions, scale }) {\n  return data.map((d, i) => {\n    return (\n      <g\n        key={i}\n        fill={`${scale(d.value)}`}\n        transform={`translate(${dimensions.boundedWidth - 100},${\n          i * 25 - 45\n        }) `}\n      >\n        <rect width=\"20\" height=\"20\" />\n        <text x=\"25\" y=\"15\" fill={`${scale(d.value)}`}>\n          {d.value}\n        </text>\n      </g>\n    );\n  });\n}\n\nexport default Legends;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nimport Chart from \"./Chart/Chart\";\nimport Bars from \"./Chart/Bars\";\nimport Axis from \"./Chart/Axis\";\nimport Legends from \"./Chart/Legends\";\n\nconst fillColors = [\"#FC766AFF\", \"#5B84B1FF\"];\nconst Histogram = ({\n  data,\n  label,\n  selectedValues,\n  customWidth,\n  customMarginWidth,\n}) => {\n  const height = 600;\n  const width = 800;\n  const marginTop = customWidth > 1000 ? 100 : 0;\n  const marginBottom = 100;\n  const marginLeft = customWidth > 1000 ? 100 : 70;\n  const marginRight = customWidth > 1000 ? 100 : 25;\n\n  let dimensions = {\n    height,\n    width,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    boundedHeight: Math.max(height - marginTop - marginBottom, 0),\n    boundedWidth: Math.max(width - marginLeft - marginRight, 0),\n  };\n\n  const nullRemovedData = data.filter((area) => {\n    if (area.values.length > 0) {\n      return area.key;\n    }\n  });\n  const selectedAreas = selectedValues.map((d) => d.value);\n  const dateRange = d3.extent(\n    nullRemovedData.map((area) => new Date(area.key))\n  );\n  const allDates = data.map((area) => new Date(area.key));\n  const values = data.map((d) => d.values).flat();\n  const valuesRange = [0, d3.max(values.map((d) => d.dailyLabConfirmedCases))];\n\n  const xScale = d3\n    .scaleTime()\n    .domain(dateRange)\n    .range([0, dimensions.boundedWidth]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain(valuesRange)\n    .range([dimensions.boundedHeight, 20]);\n\n  const xBand = d3\n    .scaleBand()\n    .domain(allDates)\n    .range([0, dimensions.boundedWidth])\n    .padding(0.2);\n\n  const xBand1 = d3\n    .scaleBand()\n    .domain(selectedAreas)\n    .range([0, xBand.bandwidth()]);\n\n  const barBandWidth = xBand.bandwidth() > 100 ? 0 : xBand.bandwidth();\n\n  const color = d3.scaleOrdinal().domain(selectedAreas).range(fillColors);\n\n  const xAccessorScaled = (d) => xBand1(d.areaName);\n  const xAccessorGroupScaled = (d) => xScale(new Date(d.key));\n  const yAccessorScaled = (d) => yScale(d.dailyLabConfirmedCases);\n  const widthAccessorScaled = () => xBand1.bandwidth();\n  const heightAccessorScaled = (d) =>\n    dimensions.boundedHeight - yScale(d.dailyLabConfirmedCases);\n  const keyAccessor = (d, i) => i;\n  const colorAccessorScaled = (d) => color(d.areaName);\n  const colorScale = (d) => color(d);\n\n  return (\n    <div className=\"Histogram\">\n      <Chart dimensions={dimensions}>\n        <Legends\n          data={selectedValues}\n          dimensions={dimensions}\n          scale={colorScale}\n        />\n        <Axis\n          dimensions={dimensions}\n          dimension=\"x\"\n          scale={xScale}\n          label={label}\n          barBandWidth={barBandWidth}\n        />\n        <Axis\n          dimensions={dimensions}\n          dimension=\"y\"\n          scale={yScale}\n          label=\"Count\"\n        />\n        <Bars\n          data={data}\n          keyAccessor={keyAccessor}\n          xAccessorGroup={xAccessorGroupScaled}\n          xAccessor={xAccessorScaled}\n          yAccessor={yAccessorScaled}\n          widthAccessor={widthAccessorScaled}\n          heightAccessor={heightAccessorScaled}\n          fill={colorAccessorScaled}\n        />\n      </Chart>\n    </div>\n  );\n};\n\nexport default React.memo(Histogram, (previous, next) => {\n  if (next.selectedValues === null) {\n    return true;\n  } else if (previous !== next) return false;\n});\n","import React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport moment from \"moment\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nfunction DatePicker({ startDate, endDate, handleDatesChange, orientation }) {\n  const [focusedInput, setFocusedInput] = useState(null);\n\n  const momentFormat = (d) => moment(d);\n\n  const minDate = momentFormat(\"01/01/2020\");\n  const maxDate = momentFormat(\"18/08/2020\");\n\n  const renderCalendarInfo = () => (\n    <span> please select between 7 days and 30 days</span>\n  );\n\n  return (\n    <div className=\"App\">\n      <DateRangePicker\n        renderCalendarInfo={renderCalendarInfo}\n        block={true}\n        daySize={30}\n        minDate={minDate}\n        maxDate={maxDate}\n        startDate={startDate}\n        startDateId=\"start-date\"\n        endDate={endDate}\n        endDateId=\"end-date\"\n        isOutsideRange={() => false}\n        onDatesChange={handleDatesChange}\n        focusedInput={focusedInput}\n        displayFormat={() => \"DD/MM/YYYY\"}\n        onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\n        showDefaultInputIcon\n        inputIconPosition=\"after\"\n        orientation={orientation}\n      />\n    </div>\n  );\n}\n\nexport default DatePicker;\n","import React from \"react\";\nimport Select from \"react-select\";\n\nfunction CustomSelect({\n  options,\n  width,\n  styles,\n  onChangeHandler,\n  value,\n  defaultValue,\n}) {\n  return (\n    <Select\n      isMulti\n      name=\"colors\"\n      value={value}\n      aria-label=\"select one or two Area\"\n      options={options}\n      defaultValue={defaultValue}\n      onChange={onChangeHandler}\n      width={width}\n      styles={styles}\n      className=\"basic-multi-select\"\n      classNamePrefix=\"select\"\n    />\n  );\n}\n\nexport default CustomSelect;\n","import React, { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Histogram from \"./Histogram\";\nimport DatePicker from \"./DatePicker\";\nimport {\n  dateFilter,\n  areaFilter,\n  groupDataByKey,\n  sortBy,\n  useCurrentResolution,\n  getPaginatedData,\n} from \"./Chart/utils\";\nimport \"./App.css\";\nimport CustomSelect from \"./Chart/CustomSelect\";\n\nfunction App() {\n  const defaultStartDate = moment(\"05/05/2020\");\n  const defaultEndDate = moment(\"05/18/2020\");\n  const [data, setData] = useState([]);\n  const [areaFilteredData, setAreaFilteredData] = useState([]);\n  const [dateWiseData, setDateWiseData] = useState([]);\n  const [startDate, setStartDate] = useState(defaultStartDate);\n  const [endDate, setEndDate] = useState(defaultEndDate);\n  const [selectedArea, setselectedArea] = useState([\n    { value: \"County Durham\", label: \"County Durham\" },\n  ]);\n  const [areas, setAreas] = useState([]);\n\n  const parseDate = d3.timeFormat(\"%d/%m/%Y\");\n  const dateAccessor = (d) => parseDate(d.specimenDate);\n  const casesAccessor = (d) => d.dailyLabConfirmedCases;\n\n  const [customHeight, customWidth] = useCurrentResolution();\n\n  const customMarginWidth = customWidth - (20 / 100) * customWidth;\n\n  const customMarginHeight = (65 / 100) * customHeight;\n\n  useEffect(() => {\n    const covidData = async () => {\n      const getData = await axios.get(\"./covid-18-08-2020.json\");\n      const areaData = await getData.data.ltlas;\n      const groupDataByDate = groupDataByKey(\"specimenDate\", areaData);\n      const areaNames = [\n        ...new Map(\n          areaData.map((name) => [\n            name.areaName,\n            { value: name.areaName, label: name.areaName },\n          ])\n        ).values(),\n      ];\n      const sortedAreas = sortBy(\"value\", areaNames);\n      setAreas(sortedAreas);\n      setData(groupDataByDate);\n      const areaWiseFilteredData = areaFilter(selectedArea, groupDataByDate);\n      setAreaFilteredData(areaWiseFilteredData);\n      const applyDateFilter = dateFilter(\n        startDate,\n        endDate,\n        areaWiseFilteredData\n      );\n      setDateWiseData(applyDateFilter);\n    };\n    covidData();\n  }, []);\n\n  const selectStyles = {\n    control: (props) => ({\n      ...props,\n      display: \"flex\",\n      background: \"white\",\n      height: \"48px\",\n      borderRadius: \"2px\",\n      border: \"1px solid #dbdbdb\",\n    }),\n    menu: () => ({\n      maxHeight: \"40px\",\n      background: \"white\",\n    }),\n    menuList: (props) => ({\n      ...props,\n      background: \"white\",\n      height: \"auto\",\n    }),\n  };\n\n  const handleDatesChange = ({ startDate, endDate }) => {\n    const momentStart = moment(startDate);\n    const momentEnd = moment(endDate);\n    if (momentEnd.diff(momentStart, \"days\") > 30) return null;\n    if (momentEnd.diff(momentStart, \"days\") < 7) return null;\n    setStartDate(startDate);\n    setEndDate(endDate);\n    const dateFilteredData = dateFilter(startDate, endDate, areaFilteredData);\n    dateFilteredData && setDateWiseData(dateFilteredData);\n  };\n  const handleSelect = (selectValue) => {\n    if (!selectValue || selectValue.length === 0) {\n      setselectedArea(selectValue);\n      return;\n    }\n    if (selectValue.length > 2) {\n      alert(\"only 2 Areas max please\");\n      return null;\n    }\n    const areaWiseFilteredData = areaFilter(selectValue, data);\n    const applyDateFilter = dateFilter(\n      startDate,\n      endDate,\n      areaWiseFilteredData\n    );\n    setAreaFilteredData(areaWiseFilteredData);\n    setDateWiseData(applyDateFilter);\n    setselectedArea(selectValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Coronavirus Daily Vis</h1>\n      <div className=\"chart__controls\">\n        <div className=\"area__select\">\n          <CustomSelect\n            options={areas}\n            styles={selectStyles}\n            defaultValue={{ value: \"County Durham\", label: \"County Durham\" }}\n            onChangeHandler={handleSelect}\n            value={selectedArea}\n          />\n        </div>\n        <div className=\"date__picker\">\n          <DatePicker\n            startDate={startDate}\n            endDate={endDate}\n            setStartDate={setStartDate}\n            setEndDate={setEndDate}\n            handleDatesChange={handleDatesChange}\n            orientation={customWidth > 600 ? \"horizontal\" : \"vertical\"}\n          />\n        </div>\n      </div>\n\n      <Histogram\n        xAccessor={dateAccessor}\n        yAccessor={casesAccessor}\n        data={dateWiseData}\n        selectedValues={selectedArea}\n        label=\"Daily cases\"\n        customWidth={customWidth}\n        customHeight={customHeight}\n        customMarginHeight={customMarginHeight}\n        customMarginWidth={customMarginWidth}\n      />\n      <p>Data Source http://coronavirus.data.gov.uk/</p>\n      <p>\n        This App is based on previous api of http://coronavirus.data.gov.uk/ I\n        am working on the new api. <br /> Note: Data is available only upto\n        17/08/2020\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}