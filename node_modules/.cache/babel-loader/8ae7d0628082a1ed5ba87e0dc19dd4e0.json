{"ast":null,"code":"var _jsxFileName = \"/home/venkat/Desktop/covid-vis/src/Chart/Axis.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport { dimensionsPropsType } from \"./utils\";\nimport { useChartDimensions } from \"./Chart\";\nconst axisComponentsByDimension = {\n  x: AxisHorizontal,\n  y: AxisVertical\n};\n\nconst Axis = ({\n  dimension,\n  dimensions,\n  ...props\n}) => {\n  // const dimensions = useChartDimensions();\n  const Component = axisComponentsByDimension[dimension];\n  if (!Component) return null;\n  return /*#__PURE__*/React.createElement(Component, Object.assign({\n    dimensions: dimensions\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n};\n\nAxis.propTypes = {\n  dimension: PropTypes.oneOf([\"x\", \"y\"]),\n  scale: PropTypes.func,\n  label: PropTypes.string,\n  formatTick: PropTypes.func\n};\nAxis.defaultProps = {\n  dimension: \"x\",\n  scale: null,\n  formatTick: d3.format(\",\")\n};\nexport default Axis;\n\nfunction AxisHorizontal({\n  dimensions,\n  label,\n  formatTick,\n  scale,\n  barBandWidth,\n  ...props\n}) {\n  const numberOfTicks = dimensions.boundedWidth < 600 ? dimensions.boundedWidth / 100 : dimensions.boundedWidth / 250;\n  const formatXScale = d3.timeFormat(\"%d/%m/%y\");\n  const ticks = scale.ticks();\n  return /*#__PURE__*/React.createElement(\"g\", Object.assign({\n    className: \"Axis AxisHorizontal\",\n    transform: `translate(0, ${dimensions.boundedHeight})`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"Axis__line\",\n    x2: dimensions.boundedWidth + barBandWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), ticks.map((tick, i) => /*#__PURE__*/React.createElement(\"text\", {\n    key: tick,\n    className: \"Axis__tick\",\n    transform: `translate(${scale(tick)}, 35) rotate(-70)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, formatXScale(tick))), label && /*#__PURE__*/React.createElement(\"text\", {\n    className: \"Axis__label\",\n    transform: `translate(${dimensions.boundedWidth / 2}, 70)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, label));\n}\n\nfunction AxisVertical({\n  dimensions,\n  label,\n  formatTick,\n  scale,\n  ...props\n}) {\n  const numberOfTicks = dimensions.boundedHeight / 70;\n  const ticks = scale.ticks();\n  return /*#__PURE__*/React.createElement(\"g\", Object.assign({\n    className: \"Axis AxisVertical\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"Axis__line\",\n    y2: dimensions.boundedHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), ticks.map((tick, i) => /*#__PURE__*/React.createElement(\"text\", {\n    key: tick,\n    className: \"Axis__tick\",\n    transform: `translate(-16, ${scale(tick)})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, formatTick(tick))), label && /*#__PURE__*/React.createElement(\"text\", {\n    className: \"Axis__label\",\n    style: {\n      transform: `translate(-46px, ${dimensions.boundedHeight / 2}px) rotate(-90deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, label));\n}","map":{"version":3,"sources":["/home/venkat/Desktop/covid-vis/src/Chart/Axis.jsx"],"names":["React","PropTypes","d3","dimensionsPropsType","useChartDimensions","axisComponentsByDimension","x","AxisHorizontal","y","AxisVertical","Axis","dimension","dimensions","props","Component","propTypes","oneOf","scale","func","label","string","formatTick","defaultProps","format","barBandWidth","numberOfTicks","boundedWidth","formatXScale","timeFormat","ticks","boundedHeight","map","tick","i","transform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport { dimensionsPropsType } from \"./utils\";\nimport { useChartDimensions } from \"./Chart\";\n\nconst axisComponentsByDimension = {\n  x: AxisHorizontal,\n  y: AxisVertical,\n};\nconst Axis = ({ dimension, dimensions, ...props }) => {\n  // const dimensions = useChartDimensions();\n  const Component = axisComponentsByDimension[dimension];\n  if (!Component) return null;\n\n  return <Component dimensions={dimensions} {...props} />;\n};\n\nAxis.propTypes = {\n  dimension: PropTypes.oneOf([\"x\", \"y\"]),\n  scale: PropTypes.func,\n  label: PropTypes.string,\n  formatTick: PropTypes.func,\n};\n\nAxis.defaultProps = {\n  dimension: \"x\",\n  scale: null,\n  formatTick: d3.format(\",\"),\n};\n\nexport default Axis;\n\nfunction AxisHorizontal({\n  dimensions,\n  label,\n  formatTick,\n  scale,\n  barBandWidth,\n  ...props\n}) {\n  const numberOfTicks =\n    dimensions.boundedWidth < 600\n      ? dimensions.boundedWidth / 100\n      : dimensions.boundedWidth / 250;\n\n  const formatXScale = d3.timeFormat(\"%d/%m/%y\");\n\n  const ticks = scale.ticks();\n\n  return (\n    <g\n      className=\"Axis AxisHorizontal\"\n      transform={`translate(0, ${dimensions.boundedHeight})`}\n      {...props}\n    >\n      <line\n        className=\"Axis__line\"\n        x2={dimensions.boundedWidth + barBandWidth}\n      />\n\n      {ticks.map((tick, i) => (\n        <text\n          key={tick}\n          className=\"Axis__tick\"\n          transform={`translate(${scale(tick)}, 35) rotate(-70)`}\n        >\n          {formatXScale(tick)}\n        </text>\n      ))}\n\n      {label && (\n        <text\n          className=\"Axis__label\"\n          transform={`translate(${dimensions.boundedWidth / 2}, 70)`}\n        >\n          {label}\n        </text>\n      )}\n    </g>\n  );\n}\n\nfunction AxisVertical({ dimensions, label, formatTick, scale, ...props }) {\n  const numberOfTicks = dimensions.boundedHeight / 70;\n\n  const ticks = scale.ticks();\n\n  return (\n    <g className=\"Axis AxisVertical\" {...props}>\n      <line className=\"Axis__line\" y2={dimensions.boundedHeight} />\n\n      {ticks.map((tick, i) => (\n        <text\n          key={tick}\n          className=\"Axis__tick\"\n          transform={`translate(-16, ${scale(tick)})`}\n        >\n          {formatTick(tick)}\n        </text>\n      ))}\n\n      {label && (\n        <text\n          className=\"Axis__label\"\n          style={{\n            transform: `translate(-46px, ${\n              dimensions.boundedHeight / 2\n            }px) rotate(-90deg)`,\n          }}\n        >\n          {label}\n        </text>\n      )}\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}