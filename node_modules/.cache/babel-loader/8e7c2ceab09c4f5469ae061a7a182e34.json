{"ast":null,"code":"import { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport sorter from \"lodash.sortby\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport const dateFilter = (startDate, endDate, data) => {\n  const momentFormat = d => moment(d);\n\n  const dateFilteredData = startDate && endDate && data.filter(area => {\n    if (momentFormat(area.key).diff(startDate) > 0 && momentFormat(area.key).diff(endDate) < 0) {\n      return area;\n    }\n  });\n  if (dateFilteredData) return dateFilteredData;\n  return data;\n};\nexport const sortBy = (sortingKey, data) => sorter(data, d => d[sortingKey]);\nexport const formatAPIEndPoint = () => {\n  const AreaType = \"ltla\";\n  const AreaName = \"*\";\n  const filters = [`areaType=${AreaType}`];\n  const structure = {\n    date: \"date\",\n    name: \"areaName\",\n    code: \"areaCode\",\n    cases: {\n      daily: \"newCasesBySpecimenDate\",\n      cumulative: \"newCasesBySpecimenDate\"\n    }\n  };\n  const apiParams = `filters=${filters.join(\";\")}&structure=${JSON.stringify(structure)}`;\n  const encodedParams = encodeURI(apiParams);\n  const endpoint = `https://api.coronavirus.data.gov.uk/v1/data?${encodedParams}`;\n  return endpoint;\n};\nexport const areaFilter = (selectedArea, data) => {\n  const Areas = selectedArea.map(item => item.value);\n  const optedArea = data.map(area => {\n    return {\n      key: area.key,\n      values: area.values.filter(d => {\n        if (Areas.includes(d.areaName)) {\n          return d;\n        }\n      })\n    };\n  });\n  return optedArea;\n};\nexport const getPaginatedData = async (filters, structure) => {\n  const endpoint = \"https://api.coronavirus.data.gov.uk/v1/data\";\n  let result = [];\n\n  for (const [i, d] of filters.entries()) {\n    const apiParams = {\n      filters: d.join(\";\"),\n      structure: JSON.stringify(structure)\n    };\n    let nextPage = null;\n    let currentPage = 1;\n\n    do {\n      const {\n        data,\n        status,\n        statusText\n      } = await axios.get(endpoint, {\n        params: { ...apiParams,\n          page: currentPage\n        },\n        timeout: 10000\n      });\n      if (status >= 400) throw Error(statusText);\n      if (\"pagination\" in data) nextPage = data.pagination.next || null;\n      const datalist = await data.data;\n      result.push(...datalist);\n      currentPage++;\n    } while (nextPage);\n  }\n\n  return result;\n};\nexport const groupDataByKey = (key, data) => {\n  const groupedData = d3.nest().key(d => d[key]).entries(data);\n  return groupedData;\n};\nexport const accessorPropsType = PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nexport const useAccessor = (accessor, d, i) => typeof accessor == \"function\" ? accessor(d, i) : accessor;\nexport const dimensionsPropsType = PropTypes.shape({\n  height: PropTypes.number,\n  width: PropTypes.number,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number\n});\nexport const combineChartDimensions = dimensions => {\n  let parsedDimensions = {\n    marginTop: 40,\n    marginRight: 30,\n    marginBottom: 40,\n    marginLeft: 75,\n    ...dimensions\n  };\n  return { ...parsedDimensions,\n    boundedHeight: Math.max(parsedDimensions.height - parsedDimensions.marginTop - parsedDimensions.marginBottom, 0),\n    boundedWidth: Math.max(parsedDimensions.width - parsedDimensions.marginLeft - parsedDimensions.marginRight, 0)\n  };\n};\n\nconst getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nconst getHeight = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nexport function useCurrentWitdh() {\n  let [width, setWidth] = useState(getWidth());\n  useEffect(() => {\n    let timeoutId = null;\n\n    const resizeListener = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setWidth(getWidth()), 150);\n    };\n\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n  return width;\n}\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, changeWidth] = useState(800);\n  const [height, changeHeight] = useState(500);\n\n  if (dimensions.width && dimensions.height) {\n    return [ref, dimensions];\n  }\n\n  const newSettings = combineChartDimensions({ ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height\n  });\n  return [ref, newSettings];\n};\nlet lastId = 0;\nexport const useUniqueId = (prefix = \"\") => {\n  lastId++;\n  return [prefix, lastId].join(\"-\");\n};","map":{"version":3,"sources":["/home/venkat/Desktop/covid-vis/src/Chart/utils.js"],"names":["useRef","useState","useEffect","axios","PropTypes","moment","d3","sorter","ResizeObserver","dateFilter","startDate","endDate","data","momentFormat","d","dateFilteredData","filter","area","key","diff","sortBy","sortingKey","formatAPIEndPoint","AreaType","AreaName","filters","structure","date","name","code","cases","daily","cumulative","apiParams","join","JSON","stringify","encodedParams","encodeURI","endpoint","areaFilter","selectedArea","Areas","map","item","value","optedArea","values","includes","areaName","getPaginatedData","result","i","entries","nextPage","currentPage","status","statusText","get","params","page","timeout","Error","pagination","next","datalist","push","groupDataByKey","groupedData","nest","accessorPropsType","oneOfType","func","number","useAccessor","accessor","dimensionsPropsType","shape","height","width","marginTop","marginRight","marginBottom","marginLeft","combineChartDimensions","dimensions","parsedDimensions","boundedHeight","Math","max","boundedWidth","getWidth","window","innerWidth","document","documentElement","clientWidth","body","getHeight","useCurrentWitdh","setWidth","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useChartDimensions","passedSettings","ref","changeWidth","changeHeight","newSettings","lastId","useUniqueId","prefix"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,KAA8B;AACtD,QAAMC,YAAY,GAAIC,CAAD,IAAOT,MAAM,CAACS,CAAD,CAAlC;;AACA,QAAMC,gBAAgB,GACpBL,SAAS,IACTC,OADA,IAEAC,IAAI,CAACI,MAAL,CAAaC,IAAD,IAAU;AACpB,QACEJ,YAAY,CAACI,IAAI,CAACC,GAAN,CAAZ,CAAuBC,IAAvB,CAA4BT,SAA5B,IAAyC,CAAzC,IACAG,YAAY,CAACI,IAAI,CAACC,GAAN,CAAZ,CAAuBC,IAAvB,CAA4BR,OAA5B,IAAuC,CAFzC,EAGE;AACA,aAAOM,IAAP;AACD;AACF,GAPD,CAHF;AAWA,MAAIF,gBAAJ,EAAsB,OAAOA,gBAAP;AACtB,SAAOH,IAAP;AACD,CAfM;AAiBP,OAAO,MAAMQ,MAAM,GAAG,CAACC,UAAD,EAAaT,IAAb,KAAsBL,MAAM,CAACK,IAAD,EAAQE,CAAD,IAAOA,CAAC,CAACO,UAAD,CAAf,CAA3C;AAEP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,QAAMC,QAAQ,GAAG,MAAjB;AACA,QAAMC,QAAQ,GAAG,GAAjB;AAEA,QAAMC,OAAO,GAAG,CAAE,YAAWF,QAAS,EAAtB,CAAhB;AACA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAE,MADU;AAEhBC,IAAAA,IAAI,EAAE,UAFU;AAGhBC,IAAAA,IAAI,EAAE,UAHU;AAIhBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,wBADF;AAELC,MAAAA,UAAU,EAAE;AAFP;AAJS,GAAlB;AASA,QAAMC,SAAS,GAAI,WAAUR,OAAO,CAACS,IAAR,CAAa,GAAb,CAAkB,cAAaC,IAAI,CAACC,SAAL,CAC1DV,SAD0D,CAE1D,EAFF;AAGA,QAAMW,aAAa,GAAGC,SAAS,CAACL,SAAD,CAA/B;AACA,QAAMM,QAAQ,GAAI,+CAA8CF,aAAc,EAA9E;AACA,SAAOE,QAAP;AACD,CApBM;AAsBP,OAAO,MAAMC,UAAU,GAAG,CAACC,YAAD,EAAe7B,IAAf,KAAwB;AAChD,QAAM8B,KAAK,GAAGD,YAAY,CAACE,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAACC,KAAhC,CAAd;AACA,QAAMC,SAAS,GAAGlC,IAAI,CAAC+B,GAAL,CAAU1B,IAAD,IAAU;AACnC,WAAO;AACLC,MAAAA,GAAG,EAAED,IAAI,CAACC,GADL;AAEL6B,MAAAA,MAAM,EAAE9B,IAAI,CAAC8B,MAAL,CAAY/B,MAAZ,CAAoBF,CAAD,IAAO;AAChC,YAAI4B,KAAK,CAACM,QAAN,CAAelC,CAAC,CAACmC,QAAjB,CAAJ,EAAgC;AAC9B,iBAAOnC,CAAP;AACD;AACF,OAJO;AAFH,KAAP;AAQD,GATiB,CAAlB;AAUA,SAAOgC,SAAP;AACD,CAbM;AAeP,OAAO,MAAMI,gBAAgB,GAAG,OAAOzB,OAAP,EAAgBC,SAAhB,KAA8B;AAC5D,QAAMa,QAAQ,GAAG,6CAAjB;AACA,MAAIY,MAAM,GAAG,EAAb;;AACA,OAAK,MAAM,CAACC,CAAD,EAAItC,CAAJ,CAAX,IAAqBW,OAAO,CAAC4B,OAAR,EAArB,EAAwC;AACtC,UAAMpB,SAAS,GAAG;AAChBR,MAAAA,OAAO,EAAEX,CAAC,CAACoB,IAAF,CAAO,GAAP,CADO;AAEhBR,MAAAA,SAAS,EAAES,IAAI,CAACC,SAAL,CAAeV,SAAf;AAFK,KAAlB;AAKA,QAAI4B,QAAQ,GAAG,IAAf;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,OAAG;AACD,YAAM;AAAE3C,QAAAA,IAAF;AAAQ4C,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB,UAA+B,MAAMtD,KAAK,CAACuD,GAAN,CAAUnB,QAAV,EAAoB;AAC7DoB,QAAAA,MAAM,EAAE,EACN,GAAG1B,SADG;AAEN2B,UAAAA,IAAI,EAAEL;AAFA,SADqD;AAK7DM,QAAAA,OAAO,EAAE;AALoD,OAApB,CAA3C;AAQA,UAAIL,MAAM,IAAI,GAAd,EAAmB,MAAMM,KAAK,CAACL,UAAD,CAAX;AAEnB,UAAI,gBAAgB7C,IAApB,EAA0B0C,QAAQ,GAAG1C,IAAI,CAACmD,UAAL,CAAgBC,IAAhB,IAAwB,IAAnC;AAC1B,YAAMC,QAAQ,GAAG,MAAMrD,IAAI,CAACA,IAA5B;AACAuC,MAAAA,MAAM,CAACe,IAAP,CAAY,GAAGD,QAAf;AACAV,MAAAA,WAAW;AACZ,KAfD,QAeSD,QAfT;AAgBD;;AACD,SAAOH,MAAP;AACD,CA9BM;AAgCP,OAAO,MAAMgB,cAAc,GAAG,CAACjD,GAAD,EAAMN,IAAN,KAAe;AAC3C,QAAMwD,WAAW,GAAG9D,EAAE,CACnB+D,IADiB,GAEjBnD,GAFiB,CAEZJ,CAAD,IAAOA,CAAC,CAACI,GAAD,CAFK,EAGjBmC,OAHiB,CAGTzC,IAHS,CAApB;AAIA,SAAOwD,WAAP;AACD,CANM;AAQP,OAAO,MAAME,iBAAiB,GAAGlE,SAAS,CAACmE,SAAV,CAAoB,CACnDnE,SAAS,CAACoE,IADyC,EAEnDpE,SAAS,CAACqE,MAFyC,CAApB,CAA1B;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAW7D,CAAX,EAAcsC,CAAd,KACzB,OAAOuB,QAAP,IAAmB,UAAnB,GAAgCA,QAAQ,CAAC7D,CAAD,EAAIsC,CAAJ,CAAxC,GAAiDuB,QAD5C;AAGP,OAAO,MAAMC,mBAAmB,GAAGxE,SAAS,CAACyE,KAAV,CAAgB;AACjDC,EAAAA,MAAM,EAAE1E,SAAS,CAACqE,MAD+B;AAEjDM,EAAAA,KAAK,EAAE3E,SAAS,CAACqE,MAFgC;AAGjDO,EAAAA,SAAS,EAAE5E,SAAS,CAACqE,MAH4B;AAIjDQ,EAAAA,WAAW,EAAE7E,SAAS,CAACqE,MAJ0B;AAKjDS,EAAAA,YAAY,EAAE9E,SAAS,CAACqE,MALyB;AAMjDU,EAAAA,UAAU,EAAE/E,SAAS,CAACqE;AAN2B,CAAhB,CAA5B;AASP,OAAO,MAAMW,sBAAsB,GAAIC,UAAD,IAAgB;AACpD,MAAIC,gBAAgB,GAAG;AACrBN,IAAAA,SAAS,EAAE,EADU;AAErBC,IAAAA,WAAW,EAAE,EAFQ;AAGrBC,IAAAA,YAAY,EAAE,EAHO;AAIrBC,IAAAA,UAAU,EAAE,EAJS;AAKrB,OAAGE;AALkB,GAAvB;AAQA,SAAO,EACL,GAAGC,gBADE;AAELC,IAAAA,aAAa,EAAEC,IAAI,CAACC,GAAL,CACbH,gBAAgB,CAACR,MAAjB,GACEQ,gBAAgB,CAACN,SADnB,GAEEM,gBAAgB,CAACJ,YAHN,EAIb,CAJa,CAFV;AAQLQ,IAAAA,YAAY,EAAEF,IAAI,CAACC,GAAL,CACZH,gBAAgB,CAACP,KAAjB,GACEO,gBAAgB,CAACH,UADnB,GAEEG,gBAAgB,CAACL,WAHP,EAIZ,CAJY;AART,GAAP;AAeD,CAxBM;;AA0BP,MAAMU,QAAQ,GAAG,MACfC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHhB;;AAKA,MAAME,SAAS,GAAG,MAChBN,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHhB;;AAKA,OAAO,SAASG,eAAT,GAA2B;AAChC,MAAI,CAACpB,KAAD,EAAQqB,QAAR,IAAoBnG,QAAQ,CAAC0F,QAAQ,EAAT,CAAhC;AAEAzF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImG,SAAS,GAAG,IAAhB;;AACA,UAAMC,cAAc,GAAG,MAAM;AAC3BC,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACAA,MAAAA,SAAS,GAAGG,UAAU,CAAC,MAAMJ,QAAQ,CAACT,QAAQ,EAAT,CAAf,EAA6B,GAA7B,CAAtB;AACD,KAHD;;AAIAC,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC;AAEA,WAAO,MAAM;AACXV,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOvB,KAAP;AACD;AAED,OAAO,MAAM4B,kBAAkB,GAAIC,cAAD,IAAoB;AACpD,QAAMC,GAAG,GAAG7G,MAAM,EAAlB;AACA,QAAMqF,UAAU,GAAGD,sBAAsB,CAACwB,cAAD,CAAzC;AAEA,QAAM,CAAC7B,KAAD,EAAQ+B,WAAR,IAAuB7G,QAAQ,CAAC,GAAD,CAArC;AACA,QAAM,CAAC6E,MAAD,EAASiC,YAAT,IAAyB9G,QAAQ,CAAC,GAAD,CAAvC;;AAEA,MAAIoF,UAAU,CAACN,KAAX,IAAoBM,UAAU,CAACP,MAAnC,EAA2C;AACzC,WAAO,CAAC+B,GAAD,EAAMxB,UAAN,CAAP;AACD;;AAED,QAAM2B,WAAW,GAAG5B,sBAAsB,CAAC,EACzC,GAAGC,UADsC;AAEzCN,IAAAA,KAAK,EAAEM,UAAU,CAACN,KAAX,IAAoBA,KAFc;AAGzCD,IAAAA,MAAM,EAAEO,UAAU,CAACP,MAAX,IAAqBA;AAHY,GAAD,CAA1C;AAMA,SAAO,CAAC+B,GAAD,EAAMG,WAAN,CAAP;AACD,CAlBM;AAoBP,IAAIC,MAAM,GAAG,CAAb;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiB;AAC1CF,EAAAA,MAAM;AACN,SAAO,CAACE,MAAD,EAASF,MAAT,EAAiB/E,IAAjB,CAAsB,GAAtB,CAAP;AACD,CAHM","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport sorter from \"lodash.sortby\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const dateFilter = (startDate, endDate, data) => {\n  const momentFormat = (d) => moment(d);\n  const dateFilteredData =\n    startDate &&\n    endDate &&\n    data.filter((area) => {\n      if (\n        momentFormat(area.key).diff(startDate) > 0 &&\n        momentFormat(area.key).diff(endDate) < 0\n      ) {\n        return area;\n      }\n    });\n  if (dateFilteredData) return dateFilteredData;\n  return data;\n};\n\nexport const sortBy = (sortingKey, data) => sorter(data, (d) => d[sortingKey]);\n\nexport const formatAPIEndPoint = () => {\n  const AreaType = \"ltla\";\n  const AreaName = \"*\";\n\n  const filters = [`areaType=${AreaType}`];\n  const structure = {\n    date: \"date\",\n    name: \"areaName\",\n    code: \"areaCode\",\n    cases: {\n      daily: \"newCasesBySpecimenDate\",\n      cumulative: \"newCasesBySpecimenDate\",\n    },\n  };\n  const apiParams = `filters=${filters.join(\";\")}&structure=${JSON.stringify(\n    structure\n  )}`;\n  const encodedParams = encodeURI(apiParams);\n  const endpoint = `https://api.coronavirus.data.gov.uk/v1/data?${encodedParams}`;\n  return endpoint;\n};\n\nexport const areaFilter = (selectedArea, data) => {\n  const Areas = selectedArea.map((item) => item.value);\n  const optedArea = data.map((area) => {\n    return {\n      key: area.key,\n      values: area.values.filter((d) => {\n        if (Areas.includes(d.areaName)) {\n          return d;\n        }\n      }),\n    };\n  });\n  return optedArea;\n};\n\nexport const getPaginatedData = async (filters, structure) => {\n  const endpoint = \"https://api.coronavirus.data.gov.uk/v1/data\";\n  let result = [];\n  for (const [i, d] of filters.entries()) {\n    const apiParams = {\n      filters: d.join(\";\"),\n      structure: JSON.stringify(structure),\n    };\n\n    let nextPage = null;\n    let currentPage = 1;\n\n    do {\n      const { data, status, statusText } = await axios.get(endpoint, {\n        params: {\n          ...apiParams,\n          page: currentPage,\n        },\n        timeout: 10000,\n      });\n\n      if (status >= 400) throw Error(statusText);\n\n      if (\"pagination\" in data) nextPage = data.pagination.next || null;\n      const datalist = await data.data;\n      result.push(...datalist);\n      currentPage++;\n    } while (nextPage);\n  }\n  return result;\n};\n\nexport const groupDataByKey = (key, data) => {\n  const groupedData = d3\n    .nest()\n    .key((d) => d[key])\n    .entries(data);\n  return groupedData;\n};\n\nexport const accessorPropsType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.number,\n]);\n\nexport const useAccessor = (accessor, d, i) =>\n  typeof accessor == \"function\" ? accessor(d, i) : accessor;\n\nexport const dimensionsPropsType = PropTypes.shape({\n  height: PropTypes.number,\n  width: PropTypes.number,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n});\n\nexport const combineChartDimensions = (dimensions) => {\n  let parsedDimensions = {\n    marginTop: 40,\n    marginRight: 30,\n    marginBottom: 40,\n    marginLeft: 75,\n    ...dimensions,\n  };\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nconst getWidth = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth;\n\nconst getHeight = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth;\n\nexport function useCurrentWitdh() {\n  let [width, setWidth] = useState(getWidth());\n\n  useEffect(() => {\n    let timeoutId = null;\n    const resizeListener = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setWidth(getWidth()), 150);\n    };\n    window.addEventListener(\"resize\", resizeListener);\n\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n\n  return width;\n}\n\nexport const useChartDimensions = (passedSettings) => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n\n  const [width, changeWidth] = useState(800);\n  const [height, changeHeight] = useState(500);\n\n  if (dimensions.width && dimensions.height) {\n    return [ref, dimensions];\n  }\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n\nlet lastId = 0;\nexport const useUniqueId = (prefix = \"\") => {\n  lastId++;\n  return [prefix, lastId].join(\"-\");\n};\n"]},"metadata":{},"sourceType":"module"}